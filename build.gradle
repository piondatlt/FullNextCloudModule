buildscript {
    ext {
        androidPluginVersion = '7.2.0'
        appCompatVersion = '1.6.0'
        jacoco_version = '0.8.8'
        kotlin_version = '1.7.22'
        androidxTestVersion = "1.4.0"
        daggerVersion = "2.46"
        markwonVersion = "4.6.2"
        prismVersion = "2.0.0"
        androidLibraryVersion = "2.14.0"
        mockitoVersion = "4.11.0"
        mockitoKotlinVersion = "4.1.0"
        mockkVersion = "1.13.3"
        espressoVersion = "3.5.1"
        workRuntime = "2.7.1"
        fidoVersion = "4.1.0-patch1"
        checkerVersion = "3.21.2"
        exoplayerVersion = "2.18.1"
        documentScannerVersion = "1.0.1"
        roomVersion = "2.4.3"

        ciBuild = System.getenv("CI") == "true"
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {

        classpath 'com.android.tools.build:gradle:4.1.3'


        classpath("io.deepmedia.tools:publisher:0.6.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")


        def nav_version = "2.3.1"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    }
}

subprojects {
    buildscript {
        repositories {
            gradlePluginPortal()
            google()
            mavenCentral()
        }
    }
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task installGitHooks(type: Copy, group: "development") {
    def sourceFolder = "${rootProject.projectDir}/scripts/hooks"
    def destFolder = "${rootProject.projectDir}/.git/hooks"

    description = "Install git hooks"

    from(sourceFolder) {
        include '*'
    }
    into destFolder

    eachFile { file ->
        println "${sourceFolder}/${file.relativeSourcePath} -> ${destFolder}/${file.path}"
    }
}


